CREATE TABLE IF NOT EXISTS public.publisher
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name text COLLATE pg_catalog."default",
    address text COLLATE pg_catalog."default",
    CONSTRAINT publisher_pkey PRIMARY KEY (id)
);
--Table: public.book


CREATE TABLE IF NOT EXISTS public.book
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    title text COLLATE pg_catalog."default",
    publisher_id bigint,
    CONSTRAINT book_pkey PRIMARY KEY (id),
    CONSTRAINT fk_book_publisher FOREIGN KEY (publisher_id)
        REFERENCES public.publisher (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);

-- Table: public.author

CREATE TABLE IF NOT EXISTS public.author
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name text COLLATE pg_catalog."default",
    CONSTRAINT author_pkey PRIMARY KEY (id)
);
-- Table: public.book_author


CREATE TABLE IF NOT EXISTS public.book_author
(
    book_id bigint NOT NULL,
    author_id bigint NOT NULL,
    CONSTRAINT book_author_pkey PRIMARY KEY (book_id, author_id),
    CONSTRAINT author_fkey FOREIGN KEY (author_id)
        REFERENCES public.author (id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE CASCADE,
    CONSTRAINT book_fkey FOREIGN KEY (book_id)
        REFERENCES public.book (id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE CASCADE
);
INSERT INTO public.publisher(
	id, name, address)
	VALUES (1, 'publisher', 'address');
INSERT INTO public.book(
    id, title, publisher_id)
    VALUES (1, 'book1', 1);
INSERT INTO public.author(
    id,name)
    VALUES (1,'author1');
INSERT INTO public.book_author(
	book_id, author_id)
	VALUES (1, 1);
